//map info here

checkpoints = [];

mapSeed = 144;
mapSize = 60;

checkpoints.push(JSON.parse('{"x":20, "y":35}'));
checkpoints.push(JSON.parse('{"x":-40, "y":35}'));
checkpoints.push(JSON.parse('{"x":-44, "y":-115}'));
checkpoints.push(JSON.parse('{"x":-135, "y":-115}'));
checkpoints.push(JSON.parse('{"x":-265, "y":-100}'));
checkpoints.push(JSON.parse('{"x":-180, "y":75}'));
checkpoints.push(JSON.parse('{"x":-100, "y":140}'));
checkpoints.push(JSON.parse('{"x":75, "y":115}'));

sandboxArea = JSON.parse('{"x":155, "y":35}');
customMap = true;
map =
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"9999999999999999999     9     9     999999999999999999999999\n"+
"9999999999999993 22                    999999999999999999999\n"+
"99999999999999 3999  9     9     9     999999999999999999999\n"+
"99999999999993 9999  9999999999999999  999999999999999999999\n"+
"9999999999999299999  99999999999       999999999999999999999\n"+
"99999999999      99  99999999999       999999999999999999999\n"+
"99999999999      99  99999999999  99999999999999999999999999\n"+
"99999999999  99  99  99999999999   999999999         9999999\n"+
"99999999     99      999999999999  999999    9999999 9999999\n"+
"99999999     99      999999999999  999999 999999     9999999\n"+
"99999999  99999999999999999        999999 99   9 99999999999\n"+
"99999999  999999999999999993 4                 9 99999999999\n"+
"99999999 399999999999999999 4 99999999999 99   9  9999999999\n"+
"999999    999999999999999994 399999999999 9999999 9999999999\n"+
"999999    99999999999999999 4 999999999   999999  9999999999\n"+
"999999  99999999999999999993 4999999999 99999    99999999999\n"+
"9999993 9999999999999999999 4 999999999 99999 99999999999999\n"+
"999999  99999999999999999994 3999999999       99999999999999\n"+
"999999  9999999999999999999 4 999999999999999999999999999999\n"+
"999999  99999999999999999993 4999999999999999999999999999999\n"+
"999999 49999999999999999999 4 999999999999999999999999999999\n"+
"999999  99999999999999999994 3999999999999999999999999999999\n"+
"999999  9993    39999999999 4 999999999999999999999999999999\n"+
"99 3    999      99999999993 4999999999999999999999999999999\n"+
"99      999  99  9999999999 4 999999999999999999999999999999\n"+
"99  9999999  99  999999999 4 3999999999999999999999999999999\n"+
"99           99               999999999999999999999999999999\n"+
"99  5        99               999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999\n"+
"999999999999999999999999999999999999999999999999999999999999" ;

//ship info here

var Turbo = '{"name":"Turbo","level":1,"model":1,"size":1.5,"zoom":1.2,"specs":{"shield":{"capacity":[150,150],"reload":[10,10]},"generator":{"capacity":[200,200],"reload":[20,20]},"ship":{"mass":80,"speed":[140,140],"rotation":[40,40],"acceleration":[150,150],"dash":{"rate":1,"burst_speed":[200,200],"speed":[240,240],"acceleration":[90,90],"initial_energy":[10,10],"energy":[100,100]}}},"bodies":{"main":{"section_segments":10,"offset":{"x":0,"y":-40,"z":10},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-90,-93,-95,-90,-30,0,50,100,105],"z":[-7,-7,-7,-7,-7,-7,0,0,0]},"width":[20,23,25,27,30,27,30,26,0],"height":[0,6,8,10,15,18,8,10,0],"texture":[17,13,63,1,10,1,10,12]},"stripes":{"section_segments":16,"offset":{"x":15,"y":-40,"z":10},"position":{"x":[-4,-4,-4,11,5,0,0,0],"y":[-92,-30,0,50,100],"z":[1,6,10,3,3,0]},"width":[3,3,3,3,3,3],"height":[1,1,1,1,1],"texture":[63]},"cockpit":{"section_segments":10,"offset":{"x":0,"y":-20,"z":17},"position":{"x":[0,0,0,0,0,0],"y":[10,30,40,70,80],"z":[-2,0,0,0,0]},"width":[7.5,10,10,9.5,0],"height":[3,10,11,10,0],"texture":[9,4,13,4],"propeller":false},"detail":{"section_segments":8,"angle":3,"offset":{"x":26,"y":-50,"z":6},"position":{"x":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"y":[0,3,7,11,14,17,21,25,28,31,35,39,42,45,49,53,57],"z":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},"width":[1,4,6,4,1,4,6,4,1,4,6,4,1,4,6,4,1],"height":[1,4,6,4,1,4,6,4,1,4,6,4,1,4,6,4,1],"texture":[4,17,17,4,4,17,17,4,4,17,17,4,4,17,17,4]},"engine":{"section_segments":4,"offset":{"x":0,"y":-95,"z":18},"position":{"x":[0,0,0,0],"y":[-18,-15,15,18],"z":[0,0,0,0]},"width":[0,10,10,0],"height":[0,4,4,0],"texture":[18]},"bracings1":{"section_segments":8,"angle":90,"offset":{"x":0,"y":-85,"z":18},"position":{"x":[0,0,0,0,0,0,0,0,0,0,0],"y":[-15,-14,-11.5,-10,-8,0,8,10,11.5,14,15],"z":[-20,-10,-1,1,2,0,2,1,-1,-10,-20]},"width":[4,4,4,4,4,5,4,4,4,4,4],"height":[0,10,4,3,2,3,2,3,4,10,0],"propeller":false,"texture":[13]},"bracings2":{"section_segments":8,"angle":90,"offset":{"x":0,"y":-105,"z":18},"position":{"x":[0,0,0,0,0,0,0,0,0,0,0],"y":[-15,-14,-11.5,-10,-8,0,8,10,11.5,14,15],"z":[-20,-10,-1,1,2,0,2,1,-1,-10,-20]},"width":[4,4,4,4,4,5,4,4,4,4,4],"height":[0,10,4,3,2,3,2,3,4,10,0],"propeller":false,"texture":[13]},"engines":{"section_segments":12,"offset":{"x":18,"y":0,"z":15},"position":{"x":[0,0,0,0,0,0,0,0],"y":[25,20,25,40,75,70,65],"z":[5,0,0,0,0,0,0,0]},"width":[0,5,7,8,8,6,0],"height":[0,14,15,15,13,10,0],"texture":[13,1,63,10,18,17],"propeller":true}},"wings":{"main":{"length":[46,0,25,-25,20],"width":[100,20,70,0,70,10],"angle":[10,0,110,110,-70],"position":[-30,5,-10,30,-10,20],"texture":[18,11,63],"doubleside":true,"bump":{"position":30,"size":7},"offset":{"x":0,"y":30,"z":0}},"font":{"length":[45],"width":[61,10],"angle":[-6,20],"position":[-60,-100],"texture":[63],"doubleside":true,"bump":{"position":30,"size":20},"offset":{"x":0,"y":-20,"z":5}}},"typespec":{"name":"Turbo","level":1,"model":1,"code":101,"specs":{"shield":{"capacity":[150,150],"reload":[10,10]},"generator":{"capacity":[200,200],"reload":[20,20]},"ship":{"mass":80,"speed":[140,140],"rotation":[40,40],"acceleration":[150,150],"dash":{"rate":1,"burst_speed":[200,200],"speed":[240,240],"acceleration":[90,90],"initial_energy":[10,10],"energy":[100,100]}}},"shape":[4.058,4.112,4.016,3.983,1.924,1.681,1.362,1.335,1.111,1.114,1.432,1.413,1.408,1.442,1.495,1.584,1.707,1.9,2.145,2.274,2.14,2.112,2.381,2.366,2.29,1.95,2.29,2.366,2.381,2.112,2.14,2.274,2.145,1.9,1.707,1.584,1.495,1.442,1.41,1.413,1.432,1.114,1.111,1.335,1.362,1.681,1.924,3.983,4.016,4.112],"lasers":[],"radius":4.112}}';
var ShadowX1 = '{"name":"Shadow X-1","level":1,"model":2,"size":0.8,"zoom":0.8,"specs":{"shield":{"capacity":[130,130],"reload":[6,6]},"generator":{"capacity":[80,80],"reload":[16,16]},"ship":{"mass":70,"speed":[155,155],"rotation":[60,60],"acceleration":[150,150],"dash":{"rate":2,"burst_speed":[180,180],"speed":[170,170],"acceleration":[170,170],"initial_energy":[10,10],"energy":[5,5]}}},"bodies":{"main":{"section_segments":10,"offset":{"x":0,"y":0,"z":0},"position":{"x":[0,0,0,0,0,0,0,0,0,0,0,0],"y":[-100,-98,-95,-70,-40,0,40,70,80,90,100],"z":[0,0,0,0,0,0,0,0,0,0,0]},"width":[0,10,20,30,40,20,20,40,40,40,20,0],"height":[0,4,4,20,20,10,10,15,15,15,10,10],"texture":[12,5,63,4,4,63,4,4,5]},"back":{"section_segments":10,"offset":{"x":0,"y":0,"z":0},"position":{"x":[0,0,0,0,0],"y":[90,95,100,105,90],"z":[0,0,0,0,0]},"width":[10,15,18,19,2],"height":[3,5,7,8,2],"texture":[63],"propeller":true},"cockpit":{"section_segments":8,"offset":{"x":0,"y":-25,"z":15},"position":{"x":[0,0,0,0,0,0],"y":[-45,-40,-25,0,5],"z":[0,0,0,0,0,0]},"width":[0,10,15,13,0],"height":[0,10,15,5,0],"texture":[9]},"laser":{"section_segments":10,"offset":{"x":70,"y":10,"z":-20},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-20,-15,0,10,20,25,30,40,70,60],"z":[0,0,0,0,0,0,0,0,0,0]},"width":[0,10,15,15,15,10,10,15,5,0],"height":[0,10,15,15,15,10,10,15,5,0],"texture":[3,4,10,3],"propeller":true}},"wings":{"top":{"offset":{"x":0,"y":50,"z":5},"length":[30],"width":[70,30],"angle":[90],"position":[0,50],"texture":[4],"bump":{"position":10,"size":15}},"side_joins":{"offset":{"x":0,"y":30,"z":-3},"length":[100],"width":[100,40],"angle":[0],"position":[-50,50],"texture":[4],"bump":{"position":10,"size":10}}},"typespec":{"name":"Shadow X-1","level":3,"model":3,"code":303,"specs":{"shield":{"capacity":[130,130],"reload":[6,6]},"generator":{"capacity":[80,80],"reload":[16,16]},"ship":{"mass":70,"speed":[155,155],"rotation":[60,60],"acceleration":[150,150],"dash":{"rate":2,"burst_speed":[180,180],"speed":[170,170],"acceleration":[170,170],"initial_energy":[10,10],"energy":[5,5]}}},"shape":[1.6,1.582,1.552,1.313,1.138,1.009,0.919,0.75,0.688,0.708,0.733,1.157,1.297,1.359,1.392,1.431,1.696,1.975,2.192,2.258,1.661,1.429,1.58,1.628,1.705,1.835,1.705,1.628,1.58,1.429,1.661,2.258,2.192,1.975,1.696,1.431,1.392,1.359,1.297,1.157,0.733,0.708,0.688,0.75,0.919,1.009,1.138,1.313,1.552,1.582],"lasers":[],"radius":2.258}}';
var RADDiamondLancer = '{"name":"RAD Diamond Lancer","level":1,"model":3,"size":2,"specs":{"shield":{"capacity":[110,110],"reload":[5,5]},"generator":{"capacity":[300,300],"reload":[10,10]},"ship":{"mass":120,"speed":[135,135],"rotation":[55,55],"acceleration":[180,180],"dash":{"rate":2,"burst_speed":[165,165],"speed":[165,165],"acceleration":[200,200],"initial_energy":[35,35],"energy":[17,17]}}},"bodies":{"main":{"section_segments":6,"offset":{"x":0,"y":-50,"z":0},"position":{"x":[0,0,0,0,0,0,0,0],"y":[-53,-50,-40,-20,10,40,80,84],"z":[0,0,0,0,0,0,0,0]},"width":[18,25,25,23,23,25,20,0],"height":[0,5,10,10,10,10,7,0],"texture":[1,1,1,1,1,8,3.9],"angle":0},"bumper":{"section_segments":6,"offset":{"x":-1,"y":-100,"z":0},"position":{"x":[1.5,1,0,-5,-5,0,0],"y":[0,10,15,25,27],"z":[0,0,0,0,0,0,0]},"width":[5,5,5,5,0],"height":[5,5,5,5,0],"texture":[3.9,16.9,3.9],"angle":90},"cockpitWindshield":{"section_segments":3,"offset":{"x":0,"y":-40,"z":10},"position":{"x":[-20,0,5,0,-20,0,0],"y":[-20,-10,0,10,20],"z":[-6,-2,0,-2,-6,0,0]},"width":[0,12,12,12,0],"height":[0,5,5,5,0],"texture":[8.6],"angle":90},"cockpitBack":{"section_segments":6,"offset":{"x":0,"y":10,"z":7},"position":{"x":[0,0,0,0,0,0,0],"y":[-50,-20,0,20,23],"z":[-2,0,0,0,0,0,0]},"width":[15,15,15,13,0],"height":[0,10,10,10,0],"texture":[4,10,17.9,3.9],"angle":0},"cockpitBackSides":{"section_segments":6,"offset":{"x":13,"y":0,"z":7},"position":{"x":[5,0,0,0,0,0,0],"y":[-20,-10,0,3],"z":[-3,0,0,0,0,0,0]},"width":[0,7,7,0],"height":[0,5,5,0],"texture":[4,17.5,4,3],"angle":0},"enginesTop":{"section_segments":6,"offset":{"x":12,"y":70,"z":7},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-60,-58,-55,-40,-30,-25,-20,-8,-30],"z":[0,0,0,0,0,0,0,0,0,0]},"width":[0,5,7,7,5,5,8,6,0],"height":[0,5,7,7,5,5,8,6,0],"texture":[3.9,3.9,10.4,63,2.9,2.9,3.9,16.9],"angle":0,"propeller":true},"enginesBottom":{"section_segments":6,"offset":{"x":18,"y":65,"z":-5},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-55,-54,-50,-40,-30,-25,-20,-8,-30],"z":[0,0,0,0,0,0,0,0,0,0]},"width":[0,5,7,7,5,5,8,6,0],"height":[0,5,7,7,5,5,8,6,0],"texture":[3.9,3.9,17.9,63,2.9,2.9,3.9,16.9],"angle":0,"propeller":true},"enginesConnect":{"section_segments":6,"offset":{"x":1,"y":36,"z":0},"position":{"x":[4,-12,0,0,0,0,0],"y":[-20,10],"z":[-5,8,0,0,0,0,0]},"width":[2,2],"height":[2,2],"texture":[1.9],"angle":90},"boostTank":{"section_segments":12,"offset":{"x":0,"y":-15,"z":0},"position":{"x":[-30,-30,-30,-30,-30,-30,-30,-30,-30,-30],"y":[-30,-30,-26,-20,-5,5,20,26,30,30],"z":[0,0,0,0,0,0,0,0,0,0,0,0]},"width":[0,5,7.5,8,8,8,8,7.5,5,0],"height":[0,5,7.5,8,8,8,8,7.5,5,0],"texture":[63,63,63,13,4,13,63,63,63],"angle":0},"boostTankHolder":{"section_segments":6,"angle":90,"offset":{"x":0,"y":-15,"z":0},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-44,-43,-39,-38,0],"z":[0,0,0,0,0,0,0,0,0,0]},"width":[0,6,8,4,4],"height":[0,4,6,4,4],"texture":[4,63,4,4,4,4,4,63,4]},"boostPipeMain":{"section_segments":6,"offset":{"x":0,"y":-20,"z":11},"position":{"x":[-30,-30,-30,-30,-27,-15,-15,0,0],"y":[-20,-18,-15,30,35,45,48],"z":[-6,-2,0,0,0,0,0,0]},"width":[2,2,2,2,2,2,0],"height":[2,2,2,2,2,2,0],"texture":[63],"angle":0},"boostPipeSide":{"section_segments":6,"offset":{"x":0,"y":-20,"z":9},"position":{"x":[-34,-34,-34,-34,-36,-40,-42,-42,-42],"y":[-20,-18,-15,25,30,33,40,46],"z":[-6,-2,0,0,0,0,0,0]},"width":[2,2,2,2,2,2,2,0],"height":[2,2,2,2,2,2,2,0],"texture":[63],"angle":0},"boostTankEngineHolder":{"section_segments":6,"angle":90,"offset":{"x":0,"y":27,"z":3},"position":{"x":[0,0,0,0,10,0,0,0,0],"y":[-54,-53,-49,-48,0],"z":[0,0,0,0,0,0,0,0,0,0]},"width":[0,6,8,3,3],"height":[0,4,6,3,3],"texture":[4,63,4,4,4,4,4,63,4]},"engineBoostTankOffset":{"section_segments":6,"offset":{"x":0,"y":70,"z":3},"position":{"x":[-42,-42,-42,-42,-42,-42,-42,-42,-42],"y":[-60,-58,-55,-40,-30,-25,-20,-8,-30],"z":[0,0,0,0,0,0,0,0,0,0]},"width":[0,5,7,7,5,5,8,6,0],"height":[0,5,7,7,5,5,8,6,0],"texture":[3.9,3.9,10.4,63,2.9,2.9,3.9,16.9],"angle":0,"propeller":true},"logo1":{"section_segments":4,"offset":{"x":0,"y":-65,"z":11},"position":{"x":[0,0,0,0,0,0,0],"y":[0,5],"z":[0,0,0,0,0,0,0]},"width":[0,3.2],"height":[0,0],"texture":[4,3,4,3],"angle":0},"logo2":{"section_segments":4,"offset":{"x":0.1,"y":-65,"z":11},"position":{"x":[0,0,0,0,0,0,0],"y":[0,5],"z":[0,0,0,0,0,0,0]},"width":[0,3.2],"height":[0,0],"texture":[4,3,4,3],"angle":120},"logo3":{"section_segments":4,"offset":{"x":0.1,"y":-65,"z":11},"position":{"x":[0,0,0,0,0,0,0],"y":[5,15],"z":[0,-3,0,0,0,0,0]},"width":[3.2,0],"height":[0,0],"texture":[4],"angle":60},"logo4":{"section_segments":4,"offset":{"x":0,"y":-65,"z":11},"position":{"x":[0,0,0,0,0,0,0],"y":[5,15],"z":[0,0,0,0,0,0,0]},"width":[3.2,0],"height":[0,0],"texture":[4],"angle":180},"logoDeco":{"section_segments":4,"offset":{"x":5,"y":-72,"z":9},"position":{"x":[0,0,3,5,8,13,14,15],"y":[-20,-10,2,5,8,14,20,26],"z":[-4,0,-1,-1,-1,-2,-3,-3,0]},"width":[3,3,3,3,3,3,2,0,0],"height":[2,2,2,2,2,1,0,0],"texture":[3.9],"angle":0}},"wings":{"cockpitTop":{"doubleside":false,"offset":{"x":0,"y":-30,"z":15},"length":[10,13],"width":[30,20,4],"angle":[-11,-42],"position":[0,0,11],"texture":[11.5,9],"bump":{"position":20,"size":3}},"cockpitTopBack":{"doubleside":false,"offset":{"x":0,"y":-17,"z":14.8},"length":[10,13],"width":[10,10,20],"angle":[-11,-42],"position":[0,0,10],"texture":[4],"bump":{"position":20,"size":3}},"wingsBackTop":{"doubleside":true,"offset":{"x":14,"y":37,"z":10},"length":[20],"width":[20,7],"angle":[20],"position":[0,20],"texture":[63],"bump":{"position":20,"size":5}},"wingsBackBottom":{"doubleside":true,"offset":{"x":20,"y":31,"z":-8},"length":[30],"width":[16,4],"angle":[-25],"position":[0,20],"texture":[63],"bump":{"position":20,"size":5}}},"typespec":{"name":"RAD Diamond Lancer","level":1,"model":3,"code":103,"specs":{"shield":{"capacity":[110,110],"reload":[5,5]},"generator":{"capacity":[300,300],"reload":[10,10]},"ship":{"mass":120,"speed":[135,135],"rotation":[55,55],"acceleration":[180,180],"dash":{"rate":2,"burst_speed":[165,165],"speed":[165,165],"acceleration":[200,200],"initial_energy":[35,35],"energy":[17,17]}}},"shape":[4.233,4.229,4.139,2.578,1.863,1.514,1.3,1.152,1.053,0.983,0.922,0.87,0.839,0.823,0.825,0.846,1.051,1.188,1.318,2.839,2.589,2.753,2.465,2.574,2.524,1.813,2.524,2.574,2.465,2.936,3.117,2.997,2.542,2.481,2.443,2.066,1.892,1.532,1.532,1.786,1.874,1.9,1.876,2.081,2.256,2.28,2.132,2.578,4.139,4.229],"lasers":[],"radius":4.233}}';
var ZerdBooster = '{"name":"Zerd Booster","level":1,"model":4,"size":1.4,"specs":{"shield":{"capacity":[150,150],"reload":[7,7]},"generator":{"capacity":[200,200],"reload":[13,13]},"ship":{"mass":140,"speed":[160,160],"rotation":[50,50],"acceleration":[160,160],"dash":{"rate":2,"burst_speed":[200,200],"speed":[160,160],"acceleration":[350,350],"initial_energy":[50,50],"energy":[0,0]}}},"bodies":{"main":{"section_segments":12,"offset":{"x":0,"y":-45,"z":10},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-65,-60,-50,-20,20,30,55,75,60],"z":[-10,-10,-10,-5,0,0,0,0,0]},"width":[0,8,13,20,25,25,30,30,0],"height":[0,6,10,17,21,22,22,22,0],"texture":[4,63,10,1,10,1,9,17]},"main1":{"section_segments":12,"offset":{"x":0,"y":80,"z":10},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-65,-60,-50,-25,-15,-5,0,15,5],"z":[0,0,0,0,0,0,0,0,0]},"width":[0,45,45,45,25,25,30,27,0],"height":[0,22,22,20,17,17,20,17,0],"propeller":true,"texture":[4,63,10,1,10,1,12,17]},"cockpit":{"section_segments":12,"offset":{"x":0,"y":-60,"z":20},"position":{"x":[0,0,0,0,0,0,0],"y":[-15,0,20,30,60],"z":[-5,-3,0,0,0]},"width":[0,10,13,13,5],"height":[0,10,13,13,5],"propeller":false,"texture":[7,9,9,4,4]},"cannon":{"section_segments":6,"offset":{"x":20,"y":-30,"z":10},"position":{"x":[-1,-1,0,0,0,0],"y":[-30,-40,-20,-5,5,15],"z":[-5,-5,-3,0,0,0]},"width":[0,5,8,11,9,0],"height":[0,5,8,11,10,0],"angle":0,"texture":[4,8,10,63,4]},"cannon1":{"section_segments":8,"offset":{"x":10,"y":30,"z":11},"position":{"x":[0,0,0,0,0,0],"y":[10,-20,-10,-5,5,15],"z":[0,0,0,0,0,0]},"width":[0,28,30,30,30,30],"height":[0,15,16,16,16,16],"angle":0,"texture":[6,8,63,63,4]},"cannon2":{"section_segments":8,"offset":{"x":37,"y":45,"z":20},"position":{"x":[0,0,0,4,4,4],"y":[-10,-20,-10,-5,15,10],"z":[0,0,0,0,0,0]},"width":[0,7,10,10,10,0],"height":[0,8,10,10,10,0],"propeller":true,"angle":0,"texture":[4,8,63,11,17]},"cannon3":{"section_segments":8,"offset":{"x":43,"y":45,"z":4},"position":{"x":[0,0,0,4,4,4],"y":[-10,-20,-10,-5,15,10],"z":[0,0,0,0,0,0]},"width":[0,7,10,10,10,0],"height":[0,8,10,10,10,0],"propeller":true,"angle":0,"texture":[4,8,63,11,17]},"cannon4":{"section_segments":6,"offset":{"x":15,"y":40,"z":29},"position":{"x":[0,0,0,0,0,0],"y":[-10,-20,-10,-5,5,20],"z":[2,2,2,0,0,-5]},"width":[0,5,5,5,5,0],"height":[0,4,4,5,5,0],"angle":180,"texture":[4,8,63,11,4],"propeller":false}},"wings":{"main":{"length":[10,20],"width":[30,20,10],"angle":[0,-50],"position":[0,0,10],"doubleside":true,"offset":{"x":20,"y":-40,"z":10},"bump":{"position":30,"size":20},"texture":[11,63]}},"typespec":{"name":"Zerd Booster","level":1,"model":4,"code":104,"specs":{"shield":{"capacity":[150,150],"reload":[7,7]},"generator":{"capacity":[200,200],"reload":[13,13]},"ship":{"mass":140,"speed":[160,160],"rotation":[50,50],"acceleration":[160,160],"dash":{"rate":2,"burst_speed":[200,200],"speed":[160,160],"acceleration":[350,350],"initial_energy":[50,50],"energy":[0,0]}}},"shape":[3.08,2.968,2.358,2.066,1.708,1.619,1.572,1.55,1.483,0.805,0.781,0.771,0.783,0.81,0.852,1.176,1.625,1.973,2.187,2.317,2.18,1.989,2.577,2.765,2.708,2.665,2.708,2.765,2.577,1.989,2.18,2.317,2.187,1.973,1.625,1.176,0.852,0.81,0.784,0.771,0.781,0.805,1.483,1.55,1.572,1.619,1.708,2.066,2.358,2.968],"lasers":[],"radius":3.08}}';

ships = [];

ships.push(Turbo);
ships.push(ShadowX1);
ships.push(RADDiamondLancer);
ships.push(ZerdBooster);

//mod code - edit at your own risk

this.options = {
  // see documentation for options reference
  root_mode: "survival",
  ships: ships,
  map_size: mapSize,
  map_id: mapSeed,
  asteroids_strength: 10,
  crystal_value: 0,
  weapons_store: false
};

if(customMap)
this.options.custom_map = map;

const map_size = mapSize*5; //the size of the map

const checkpointrange = 50; //size of checkpoints
const quickRaceStartTime = 20; //time it takes to start a race if all players are ready
const longRaceStartTime = 60; //time it takes to start a race if some players are ready
const DNFTime = 60; //did not finish time
const finalCountdownTime = 10; //the final countdown before the race
const sandboxAreaSize = 100;
const shipsInLine = 3;
const startingLinesWidth = 30;
const startingLinesDist = 20;
const laps = 2;

raceinprogress = false; //whether there's a race going on
racetime = 0; //race timer
lastfinished = 0; //how many players finished
countdown = quickRaceStartTime; //lobby countdown timer(all players ready)
countdownLong = longRaceStartTime; //lobby countdown timer(some players ready)
DNFCountdown = 0; //DNF timer
finalCountdown = 0; //final countdown
raceStarted = false; //whether the final countdown is finished
everySecond = 0;

top1time = -1;
top2time = -1;
top3time = -1;

ads = [];
adTimer = 0;
adRefreshTime = 10;

ads.push("Uranus Racing League by /u/UranusOrbiter aka Uranus_is_big#7833");
ads.push("Uranus Racing League version 0.0003");
ads.push("Have a nice day");

ads.push("Huge thanks to pmgl for making all of this possible");
ads.push("Huge thanks to Starblast dev team for making all of this possible");

ads.push("Thanks to everybody who helped test this mod");

ads.push("Map created by rm -rf / and improved by Uranus");
ads.push("Huge thanks to rm -rf / for creating this beautiful map");

ads.push("Huge thanks to Finalizer for Astral Accelerator design");
ads.push("Huge thanks to Finalizer for his ship designs");

ads.push("Huge thanks to Revenge Zerd for Zerd Booster design");
ads.push("Huge thanks to Revenge Zerd for his ship designs");

distance = function(x, y){
  return Math.sqrt(x*x+y*y);
};

shortestPath = function(x1, y1, x2, y2){
  
  shortestDist = 10000;
  
  
  coords = [];
  
  xx = x2-x1;
  yy = y2-y1;
  coords.push(xx, yy);
  shortest = [xx, yy];
  
  xx = x2+map_size*2-x1;
  yy = y2-y1;
  coords.push(xx, yy);
  
  xx = x2-map_size*2-x1;
  yy = y2-y1;
  coords.push(xx, yy);
  
  xx = x2-x1;
  yy = y2+map_size*2-y1;
  coords.push(xx, yy);
  
  xx = x2-x1;
  yy = y2-map_size*2-y1;
  coords.push(xx, yy);
  
  
  xx = x2+map_size*2-x1;
  yy = y2+map_size*2-y1;
  coords.push(xx, yy);
  
  xx = x2+map_size*2-x1;
  yy = y2-map_size*2-y1;
  coords.push(xx, yy);
  
  xx = x2-map_size*2-x1;
  yy = y2+map_size*2-y1;
  coords.push(xx, yy);
  
  xx = x2-map_size*2-x1;
  yy = y2-map_size*2-y1;
  coords.push(xx, yy);
  
  for(var i = 0; i<9; i++){
    dist = distance(coords[i*2], coords[i*2+1]);
    if(dist<shortestDist){
      shortestDist = dist;
      shortest = [coords[i*2], coords[i*2+1]];
    }
  }
  
  return shortest;
  
};

writeTextLarge = function(ship, string){
  ship.setUIComponent({
  id:"largeText",
  position:[25,25,50,25],
  clickable: false,
  visible: true,
  components: [
    { type: "text",position: [0,0,100,100],color: "#FFFFFF",value: string}
  ]
});

  
};

writeTextSmol = function(ship, string){
  ship.setUIComponent({
  id:"smolText",
  position:[25,10,50,25],
  clickable: false,
  visible: true,
  components: [
    { type: "text",position: [0,0,100,20],color: "#FFFFFF",value: string}
  ]
});
};

randomAd = function(){
  adIndex = Math.floor(Math.random()*ads.length);
  for (i=0;i<game.ships.length;i++)
  {
    ship.setUIComponent({
    id:"ad",
    position:[25,3,50,25],
    clickable: false,
    visible: true,
    components: [
      { type: "text",position: [0,0,100,20],color: "#FFFFFF",value: ads[adIndex]}
    ]
    });
  }
};

announce = function(string){
  for (i=0;i<game.ships.length;i++)
  {
    ship = game.ships[i];
    ship.setUIComponent({
    id:"announceText",
    position:[25,75,50,25],
    clickable: false,
    visible: true,
    components: [
      { type: "text",position: [0,0,100,20],color: "#FFBBBB",value: string}
    ]
  });
      
  }
};

log = function(string){
  game.modding.terminal.echo(string);
}

drawTopScores = function(ship, b){
  sc1 = "#1 - ";
  sc2 = "#2 - ";
  sc3 = "#3 - "
  if(top1time>=0)sc1+=top1time.toFixed(2);
  if(top2time>=0)sc2+=top2time.toFixed(2);
  if(top3time>=0)sc3+=top3time.toFixed(2);
  
  if(ship.custom.lasttime>=0)
  yourLastTime = "your time: " + ship.custom.lasttime.toFixed(2);
  else
  yourLastTime = "your time: N/A";
  
  ship.setUIComponent({
  id:"topscores",
  position:[10,50,50,25],
  clickable: false,
  visible: b,
  components: [
    { type: "text",position: [0,0,100,20],color: "#FFFF33",value: sc1},
    { type: "text",position: [0,20,100,20],color: "#BBBBBB",value: sc2},
    { type: "text",position: [0,40,100,20],color: "#FFAA33",value: sc3},
    { type: "text",position: [0,80,100,20],color: "#FFFFFF",value: yourLastTime}
  ]
});
      
};

drawShipChooseButtons = function(ship, b){
  ship.setUIComponent(
    {id: "prevship",
    position: [2,50,8,14],
    clickable: b,
    shortcut: "W",
    visible: b,
    components: [
  	{ type:"round",position:[0,0,100,100],fill:"#456",stroke:"#CDE",width:2},
  	{ type: "text",position:[10,35,80,30],value:"Previous ship",color:"#CDE"},
  	{ type: "text",position:[20,70,60,20],value:"[W]",color:"#CDE"}
  	]
      
    }
  );
  
  ship.setUIComponent(
    {id: "nextship",
    position: [90,50,8,14],
    clickable: b,
    shortcut: "E",
    visible: b,
    components: [
  	{ type:"round",position:[0,0,100,100],fill:"#456",stroke:"#CDE",width:2},
  	{ type: "text",position:[10,35,80,30],value:"Next ship",color:"#CDE"},
  	{ type: "text",position:[20,70,60,20],value:"[E]",color:"#CDE"}
  	]
      
    }
  );
  
}

drawReadyButton = function(ship, b){
  color = "#AA0000";
  text = "NOT READY"
  if(ship.custom.ready){
    color = "#00AA00";
    text = "READY";
  }
  
  ship.setUIComponent(
    {id: "readyToggle",
    position: [10,20,8,14],
    clickable: b,
    shortcut: "U",
    visible: b,
    components: [
  	{ type:"round",position:[0,0,100,100],fill:color,stroke:"#CDE",width:2},
  	{ type: "text",position:[10,35,80,30],value:text,color:"#CDE"},
  	{ type: "text",position:[20,70,60,20],value:"[U]",color:"#CDE"}
  	]
      
    }
  );
}

drawRaceTrack = function(ship, b){
  
  positionX = 85;
  positionY = 30;
  
  size = 10;
  
  
          
  ship.setUIComponent({
        id:"playerMarker",
        position:[positionX, positionY,25,25],
        clickable: false,
        visible: b,
          components: [
        	  { type:"round",position:[0,0,3,4],fill:"#777777",stroke:"#CDE",width:1}
        		]
        });
  
  for(var i = 0; i<checkpoints.length; i++){
    
    path = shortestPath(ship.x, ship.y, checkpoints[i].x, checkpoints[i].y);
    x = path[0];
    y = path[1];
    
    chX = x/map_size;
    chY = y/map_size;
    
    fill = "#00ff00";
    if(i<ship.custom.checkpoint)
    fill = "#aaaaaa";
    else if (i==ship.custom.checkpoint)
    fill = "#ff0000";
    else if (i==ship.custom.checkpoint+1)
    fill = "#3333ff";
    else if (i==checkpoints.length)
    fill = "#ffffff";
    
    ship.setUIComponent({
          id:"ch"+i,
          position:[positionX + chX*size, positionY - chY*size,25,25],
          clickable: false,
          visible: b,
            components: [
          	{ type:"round",position:[0,0,5,8],fill:fill,stroke:"#CDE",width:1}
          	]
          });
    
  }
  
  ship.setUIComponent({
          id:"minimap",
          position:[positionX-size, positionY-size,100,100],
          clickable: false,
          visible: b,
            components: [
              { type:"round",position:[0,0,size*2,size*2],fill:"#222222",stroke:"#CDE",width:1},          		]
          });
  
};

startRace = function(){
  if(!raceinprogress){
    lastfinished = 0;
    raceinprogress = true;
    raceStarted = false;
    finalCountdown=finalCountdownTime;
    DNFCountdown = DNFTime;
    
    top1time = -1;
    top2time = -1;
    top3time = -1;
    
    for (i=0;i<game.ships.length;i++)
    {
      ship = game.ships[i];
      if(!ship)continue;
      if(!ship.custom.ready)continue;
      ship.custom.lap = 0;
      ship.custom.inrace = true;
      ship.custom.checkpoint = 0;
      ship.custom.lasttime = -1;
      drawShipChooseButtons(ship, false);
      drawReadyButton(ship, false);
      drawTopScores(ship, false);
    }
    log("Race started!");
  }else{
    log("Race already started");
  }
}

stopRace = function(){
  if(raceinprogress){
    raceinprogress = false;
    racetime = 0;
    countdown = quickRaceStartTime; 
    countdownLong = longRaceStartTime;
    lastfinished = 0;
    for (i=0;i<game.ships.length;i++)
    {
      ship = game.ships[i];
      if(!ship)continue;
      drawRaceTrack(ship, false);
      ship.custom.checkpoint = 0;
      ship.custom.ready = false;
      drawReadyButton(ship, true);
      writeTextSmol(ship,"Press U when ready.");
    }
    log("Race stopped.");
  }else{
    log("No race in progress");
  }
}

//direction from the start to the first checkpoint
firstCheckpointDir = shortestPath(checkpoints[0].x, checkpoints[0].y, checkpoints[1].x, checkpoints[1].y);

this.tick = function(game) {
  if(game.ships.length<1)return;
  var i = 0;
  if(raceinprogress)
    racetime += 1/120;
  everySecond++;
  if(everySecond>120){
    everySecond-=120;
    adTimer++;
    
    if(adTimer>adRefreshTime){
      adTimer = 0;
      randomAd();
    }
    
    
    //ship initialization
    for (i=0;i<game.ships.length;i++)
    {
      ship = game.ships[i];
      if(!ship)continue;
      if (!ship.custom.init){
        //this is a new ship, we have to set it up
        ship.custom.init = true;
        ship.custom.inrace = false;
        ship.custom.checkpoint = 0;
        ship.custom.lasttime = -1;
        ship.custom.type = 0;
        ship.custom.ready = false;
        ship.custom.lap = 0;
        ship.set({
          x:sandboxArea.x-(sandboxAreaSize/8)+(sandboxAreaSize/4)*Math.random(),
          y:sandboxArea.y-(sandboxAreaSize/8)+(sandboxAreaSize/4)*Math.random()
        });
        drawReadyButton(ship, true);
        //tell them what to do
        if(!raceinprogress) writeTextSmol(ship,"Press U when ready.");
      }
      if(!ship.custom.inrace)
        ship.set({type:101+ship.custom.type});
      //no fighting for now
      ship.set({invulnerable:400});
    }
    
    //if there is a race going on
    if(raceinprogress){
      finalCountdown -= 1; //countdown at the start of the race
      ready = true; //whether the race is over
      for (i=0;i<game.ships.length;i++) //iterate
      {
        ship = game.ships[i];
        if(!ship)continue;
        if(!ship.custom.inrace){
          //this ship either finished or just joined, tell them
          drawShipChooseButtons(ship, true);
          writeTextSmol(ship,"Wait until all players finish the race ("+lastfinished+" so far) or wait " + DNFCountdown + " seconds");
          x = sandboxArea.x-ship.x;
          y = sandboxArea.y-ship.y;
          if(distance(x,y)>sandboxAreaSize)
          ship.set({
            x:sandboxArea.x-(sandboxAreaSize/8)+(sandboxAreaSize/4)*Math.random(),
            y:sandboxArea.y-(sandboxAreaSize/8)+(sandboxAreaSize/4)*Math.random()
          })
          continue;
        }
        
        //there are still players racing, so we're not ready to end the race
        ready = false;
        
        //starting countdown
        if(finalCountdown>=0){
          //get the direction to the first checkpoint, normalized
          dist = distance(firstCheckpointDir[0],firstCheckpointDir[0]);
          x = firstCheckpointDir[0]/dist;
          y = firstCheckpointDir[1]/dist;
          //launchvel represent the initial boop the ships experience when
          //the countdown is over
          launchvel = 40;
          //get a vector perpendicular to the direction to the first checkpoint
          perpY = x;
          perpX = -y;
          
          vx = 0;
          vy = 0;
          //launch the player as the race starts
          if(finalCountdown<1&&!raceStarted){
            raceStarted = true;
            racetime = 0;
            writeTextLarge(ship,"GO GO GO");
            vx = x*launchVel;
            vy = y*launchVel;
          }else
          //output the final countdown
          writeTextLarge(ship,""+finalCountdown);
          posInLine = i%shipsInLine;
          line = Math.floor(i/shipsInLine);
          //keep the player at the starting line
          ship.set({
            x:checkpoints[0].x-perpX*(startingLinesWidth/2) + perpX*(startingLinesWidth)*(posInLine/shipsInLine)+(-y*line*startingLinesDist),
            y:checkpoints[0].y-perpY*(startingLinesWidth/2) + perpY*(startingLinesWidth)*(posInLine/shipsInLine)+(-y*line*startingLinesDist),
          });
        }
        
        //update the race track minimap
        drawRaceTrack(ship, true);
        
        //checkpoint execution
        ch = ship.custom.checkpoint;
        x = checkpoints[ch].x-ship.x;
        y = checkpoints[ch].y-ship.y;
        //if we're in range of the next checkpoint
        if(distance(x, y)<checkpointrange){
          
          //proceed to the next checkpoint
          ship.custom.checkpoint++;
          
          
          
          //if this is the last checkpoint
          if(ship.custom.checkpoint>=checkpoints.length){
            if(ship.custom.lap<laps-1){
              ship.custom.lap++;
              ship.custom.checkpoint = 0;
            }else{
              //if this is the first ship to finish, start the DNF countdown
              if(lastfinished==0)DNFCountdown = DNFTime;
              lastfinished++;
              if(lastfinished==1)top1time = racetime;
              if(lastfinished==2)top2time = racetime;
              if(lastfinished==3)top3time = racetime;
              log("#"+lastfinished+" - "+racetime + " s");
              writeTextLarge(ship,"Your place: "+lastfinished+" in "+racetime.toFixed(2)+"s");
              ship.custom.inrace=false;
              ship.custom.checkpoint = 0;
              ship.custom.lasttime = racetime;
              for (j=0;j<game.ships.length;j++)
              drawTopScores(game.ships[j], true);
              ship.set({score:(checkpoints.length*100000)-(lastfinished*1000)});
            }
          }else{ 
            ship.set({score:ship.custom.checkpoint*1000+checkpoints.length*ship.custom.lap*1000});
            writeTextLarge(ship," ");
            if(ship.custom.checkpoint > 1||ship.custom.lap>0){
              if(laps>0)
                lapText = "(lap "+(ship.custom.lap+1)+"/"+laps+")";
              writeTextSmol(ship,"Checkpoint "+ ship.custom.checkpoint + "/"+checkpoints.length+" "+lapText);
            } else {
              writeTextSmol(ship,"Follow the red dot.");
            }
          }
        }
      }
      if(lastfinished>0)DNFCountdown--;
      if(ready||(lastfinished>0&&DNFCountdown<0)){
        if(ready)
        log("All players finished");
        else log("Race ends - timeout");
        stopRace();
      }
      
    }else{
      //whether all players are ready
      ready = true;
      //whether there's at least one fool that wants a race
      atLeastOnePlayer = false;
      for (i=0;i<game.ships.length;i++)
      {
        ship = game.ships[i];
        if(!ship)continue;
        //check if the ship is in range of starting checkpoint
        x = checkpoints[0].x-ship.x;
        y = checkpoints[0].y-ship.y;
        if(!ship.custom.ready){
          //if not, then clearly not all players are ready
          ready = false;
          drawShipChooseButtons(ship, true);
          if(countdownLong<longRaceStartTime-1)
            writeTextLarge(ship,"Race starts in "+Math.max(countdown,countdownLong)+" - YOU ARE NOT READY [U]");
          else writeTextLarge(ship, "");
          continue;
        }else atLeastOnePlayer = true;//otherwise at least somebody's willing to race
        //countdownLong overrides countdown
        
        
        if(countdownLong<countdown)countdown=countdownLong;
        
        //if the countdown is at maximum, we're probably still waiting for players
        if(countdown>=quickRaceStartTime-1)
          writeTextLarge(ship,"Waiting for other players... "+countdownLong);
        //otherwise we're starting soon
        if(countdown<quickRaceStartTime-1)writeTextLarge(ship,"Starting in "+countdown+" seconds...");
        //if the countdown finished successfuly
        if(countdown<0||countdownLong<0){
          startRace();
        }
      }
      
      if(atLeastOnePlayer)countdownLong-=1; else{ 
        countdownLong = longRaceStartTime;
      }
      if(ready)countdown-=1; else{ 
        countdown = quickRaceStartTime;
      }
     
    }
    
  }
  // do mod stuff here ; see documentation
  if (game.step%10==0) // ensure this is done only once per second
  {
    for (i=0;i<game.ships.length;i++)
      {
        ship = game.ships[i];
        if(!ship)continue;
        if(!ship.custom.inrace)continue;
        ch = ship.custom.checkpoint;
        if(ch>=checkpoints.length)continue;
        path = shortestPath(ship.x, ship.y, checkpoints[ch].x, checkpoints[ch].y);
        x = path[0];
        y = path[1];
        vis = true;
        if(distance(x, y)<checkpointrange)
        vis = false;
        xx = 25*x/distance(x, y);
        yy = 25*y/distance(x, y);
        ship.setUIComponent({
          id:"nextCh",
          position:[50+xx,50-yy,25,25],
          clickable: false,
          visible: vis,
            components: [
          	{ type:"round",position:[0,0,5,10],fill:"#ff0000",stroke:"#CDE",width:1}
          	]
          });
        
      } 
    
  }
};

this.event = function(event,game) {
  switch (event.name)
  {
    case "ui_component_clicked":
      var ship = event.ship;
      var component = event.id;
      if (component == "nextship") 
      {
        ship.custom.type++;
        if(ship.custom.type>=ships.length)
          ship.custom.type = 0;
      }
      if (component == "prevship") 
      {
        ship.custom.type--;
        if(ship.custom.type<0)
          ship.custom.type = ships.length-1;
      }
      if (component == "readyToggle"){
        ship.custom.ready = !ship.custom.ready;
        drawReadyButton(ship, !ship.custom.inrace);
      }
        
      break;
  }
};
